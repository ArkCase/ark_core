#!/bin/bash
set -euo pipefail

say() {
	echo -e "$(date -u -Isec): ${@}"
}

fail() {
	say "${@}" 1>&2
	exit ${EXIT_CODE:-1}
}

ping_server() {
	local URL="${1}"
	/usr/bin/curl -m 5 "${URL}/actuator/health" &>/dev/null
}

to_boolean() {
	local RESULT="false"
	case "${1,,}" in
		true | t | yes | y | 1 | on | enable | enabled | active ) RESULT="true" ;;
	esac
	echo "${RESULT}"
	return 0
}

DEFAULT_WAIT=90
DEFAULT_URL="http://localhost:9999"

[ -v DEVELOPMENT ] || DEVELOPMENT="false"
# Sanitize to ensure proper value is consumed below
DEVELOPMENT="$(to_boolean "${DEVELOPMENT}")"

# If not specifically told otherwise, wait up to
# 90 seconds for the config server to come back up
[ -v CONFIG_WAIT ] || CONFIG_WAIT=${DEFAULT_WAIT}
[ -n "${CONFIG_WAIT}" ] || CONFIG_WAIT=${DEFAULT_WAIT}
[[ ${CONFIG_WAIT} =~ ^(0|[1-9][0-9]*)$ ]] || fail "The wait period must be a number with no leading zeros [${CONFIG_WAIT}]"

[ -v CONFIG_URL ] || CONFIG_URL="${DEFAULT_URL}"
[ -n "${CONFIG_URL}" ] || fail "The config server URL must be a non-empty string [${CONFIG_URL}]"

[ -v POLL_CONFIG ] || POLL_CONFIG="true"
POLL_CONFIG="$(to_boolean "${POLL_CONFIG}")"

[ -v BASE_DIR ] || BASE_DIR="/app"
[ -v INIT_DIR ] || INIT_DIR="${BASE_DIR}/init"

#
# Update the SSL certificate trusts
#
/update-ssl

#
# In case of development mode...
#
/add-developer

if ${POLL_CONFIG} ; then
	START="$(date +%s)"
	say "Starting the polling cycle"
	while true ; do
		ping_server "${CONFIG_URL}" && break

		say "\tConfig server is not up yet at [${CONFIG_URL}]"
		NOW="$(date +%s)"
		[ $(( NOW - START )) -lt ${CONFIG_WAIT} ] || fail "Timed out waiting for configserver to come up at [${CONFIG_URL}]"
		sleep 2
	done
	say "Config server responded, continuing"
else
	say "Config server polling is disabled, continuing"
fi

if [ -v WORK_DIR ] ; then
	[ -d "${WORK_DIR}" ] || mkdir -p "${WORK_DIR}" || fail "Failed to create the Tomcat work directory [${WORK_DIR}]"
fi

if [ -v CATALINA_TMPDIR ] ; then
	[ -d "${CATALINA_TMPDIR}" ] || mkdir -p "${CATALINA_TMPDIR}" || fail "Failed to create the Tomcat temp directory [${CATALINA_TMPDIR}]"
fi

if [ ! -v NODE_ID ] ; then
	[ -v POD_NAME ] || POD_NAME="$(hostname)"
	POD_NAME="${POD_NAME%%.*}"
	[[ "${POD_NAME}" =~ ^.*-([0-9]+)$ ]] || fail "The pod name [${POD_NAME}] doesn't match the pattern for a stateful pod (must end with a number)"
	NODE_ID="${BASH_REMATCH[1]}"
else
	[[ "${NODE_ID}" =~ ^[1-9][0-9]*$ ]] || fail "The NODE_ID value [${NODE_ID}] is not a valid number"
	[ ${NODE_ID} -gt 0 ] && [ ${NODE_ID} -lt 256 ] || fail "The NODE_ID value must be in the range [1..255]"
fi

# Remove al leading zeros, just in case...
export NODE_ID="$(( 10#${NODE_ID} ))"

say "Launching the main process"

[ ${#} -gt 0 ] || set -- "run"
CATALINA="/app/tomcat/bin/catalina.sh"
say "Launching as: ${CATALINA} ${@@Q}"
exec "${CATALINA}" "${@}"
