#!/bin/bash

set -euo pipefail
. /.functions

doing "Running Tomcat as: $(id)"

DEFAULT_CONFIG_WAIT=90
DEFAULT_CONFIG_URL="https://localhost:9999"

# If not specifically told otherwise, wait up to
# 90 seconds for the config server to come back up
set_or_default CONFIG_WAIT
[[ ${CONFIG_WAIT} =~ ^(0|[1-9][0-9]*)$ ]] || fail "The wait period must be a number with no leading zeros [${CONFIG_WAIT}]"

set_or_default CONFIG_URL

set_as_boolean POLL_CONFIG "true"

set_or_default BASE_DIR "/app"
set_or_default INIT_DIR "${BASE_DIR}/init"
set_or_default HOME_DIR "${BASE_DIR}/home"

# This seems to be necessary in order for the AngularResourceCopier to not puke out
cd "${HOME_DIR}" || fail "Failed to CD into the home directory [${HOME_DIR}]"
export HOME="${HOME_DIR}"

#
# Update the SSL certificate trusts
#
init_ssl

# Enable reading the cert that HAProxy will need
set_as_boolean CLUSTER_ENABLED "false"
"${CLUSTER_ENABLED}" && chmod a+r "${SSL_DIR}/haproxy-cert.pem"

if as_boolean "${POLL_CONFIG}" ; then
	# We poke at a specific path that will always return a result
	poll_url "${CONFIG_URL}/actuator/health" "${CONFIG_WAIT}" 2 || exit ${?}
else
	warn "Config server polling is disabled, continuing"
fi

#
# Set the alternate Java version, if applicable
#
set-java

ensure_dir "${WORK_DIR}"
ensure_dir "${CATALINA_TMPDIR}"

if [ ! -v NODE_ID ] ; then
	set_or_default POD_NAME "$(hostname)"
	POD_NAME="${POD_NAME%%.*}"
	[[ "${POD_NAME}" =~ ^.*-([0-9]+)$ ]] || fail "The pod name [${POD_NAME}] doesn't match the pattern for a stateful pod (must end with a number)"
	NODE_ID="${BASH_REMATCH[1]}"
else
	[[ "${NODE_ID}" =~ ^[1-9][0-9]*$ ]] || fail "The NODE_ID value [${NODE_ID}] is not a valid number"
	[ ${NODE_ID} -gt 0 ] && [ ${NODE_ID} -lt 256 ] || fail "The NODE_ID value must be in the range [1..255]"
fi

# Remove al leading zeros, just in case...
export NODE_ID="$(( 10#${NODE_ID} ))"

#
# Apply the changes to the server.xml template
#
SERVER_XML="${TOMCAT_HOME}/conf/server.xml.tpl"
if is_file_readable "${SERVER_XML}" ; then
	TARGET="${SERVER_XML//.tpl/}"
	say "Editing [${TARGET}] to remove the redundant cluster member"
	XPATH="//Cluster/Channel/Interceptor/Member[@className = 'org.apache.catalina.tribes.membership.StaticMember' and starts-with(@host, '$(hostname).')]"
	xmlstarlet ed -P -d "${XPATH}" "${SERVER_XML}" > "${TARGET}"
fi

# This needs to exist to support the legacy deployments
set_or_default COMPONENT "arkcase"

#
# Set the environment variables for the global artifacts checksum
#
SUM_FILE="${HOME_DIR}/.artifacts.global.sums"
if is_file_readable "${SUM_FILE}" ; then
	ARTIFACTS_GLOBAL_SUMS="$(<"${SUM_FILE}")"
else
	ARTIFACTS_GLOBAL_SUMS="{ '${COMPONENT}': 'unknown' }"
	ARTIFACTS_GLOBAL_SUMS="${ARTIFACTS_GLOBAL_SUMS//\"/\'}"
fi

# We're only interested in the component's value, for now ...
export ARTIFACTS_GLOBAL_HASH="$(jq --arg COMPONENT "${COMPONENT}" -r '.[$COMPONENT]' <<< "${ARTIFACTS_GLOBAL_SUMS}")"

# Add some extra deetz to the JSON, for tracking purposes ;)
ARTIFACTS_GLOBAL_SUMS="$(jq --arg POD_NAME "${POD_NAME}" --arg TIMESTAMP "$(timestamp)" -r '. += { "pod": $POD_NAME, "timestamp": $TIMESTAMP }' <<< "${ARTIFACTS_GLOBAL_SUMS}")"
export ARTIFACTS_GLOBAL_SUMS

say "Launching the main process"

# Add the ability to modify the environment
set_or_default ENV_FILE "/.env"
[ -s "${ENV_FILE}" ] && . "${ENV_FILE}"

set_or_default LD_LIBRARY_PATH
set_or_default EXTRA_LIBRARY_DIR "${TEMP_DIR}/.libraries"
export EXTRA_LIBRARY_DIR

LD_LIBRARY_PATH+=":${EXTRA_LIBRARY_DIR}"
export LD_LIBRARY_PATH

set_or_default CATALINA_OPTS
CATALINA_OPTS+=" -Djava.library.path=$(sanitize_pathspec "${LD_LIBRARY_PATH}")"
export CATALINA_OPTS

[ ${#} -gt 0 ] || set -- "run"
CMD=("${TOMCAT_HOME}/bin/catalina.sh" "${@}")

# In development mode, we take a slight detour b/c we'll want to run
# the tomcat container in a loop so we can restart it over and over
# without crashing the pod
as_boolean "${DEVELOPMENT:-false}" && as_boolean "${DEBUG:-false}" && CMD=( run-in-loop "${CMD[@]}" )

execute "${CMD[@]}"
